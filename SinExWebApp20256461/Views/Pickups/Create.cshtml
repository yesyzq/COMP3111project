@model SinExWebApp20256461.ViewModels.NewPickupViewModel

@{
    ViewBag.Title = "Create";
}

<h2>New @Html.DisplayFor(model => model.Pickup.Type) Pickup</h2>


@using (Html.BeginForm("Create", "Pickups"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Pickup.Type)
    @Html.HiddenFor(model => model.WaybillId)

    <div class="btn-group" style="margin:5px 0 10px 0;">
        @Html.ActionLink("Immediate", "Create", new {waybillId= ViewBag.WaybillId, pickupType = "Immediate", location = ViewBag.Location }, new { @class = "btn btn-primary btn-large" })
        @Html.ActionLink("Prearranged", "Create", new { waybillId = ViewBag.WaybillId, pickupType = "Prearranged", location = ViewBag.Location }, new { @class = "btn btn-info btn-large" })
    </div>

    if (Model.Pickup.Type == "Immediate")
    {
        <div class="form-group">
            @Html.TextBoxFor(model => model.Pickup.Date, htmlAttributes: new { @Value = @DateTime.Now, @type = "datetime", @class = "form-control", @readonly = "readonly" })
        </div>
    }

    if (Model.Pickup.Type == "Prearranged")
    {
        <div class="form-group">
            @Html.TextBoxFor(model => model.Pickup.Date, htmlAttributes: new { @Value = @DateTime.Now, @type = "datetime", @class = "form-control" })
        </div>
        <div>You can prearranged your pickup up to 5 days, specify both date and time</div>
    }

<h2>The pickup Location  :</h2>
    <div class="btn-group" style="margin:5px 0 10px 0;">
        @Html.ActionLink("Same", "Create", new { waybillId = ViewBag.WaybillId, pickupType = Model.Pickup.Type, location = "Same" }, new { @class = "btn btn-success btn-large" })
        @Html.ActionLink("Diff", "Create", new { waybillId = ViewBag.WaybillId, pickupType = Model.Pickup.Type, location = "Diff" }, new { @class = "btn btn-warning btn-large" })
    </div>

    <div>
        @if (ViewBag.location == "Same")
        {
            @Html.TextBoxFor(model => model.Pickup.Location, new { @Value = Model.Pickup.Location, @class = "form-control", @readonly = "readonly" })
        }

        @if (ViewBag.location == "Diff")
        {
            @Html.DropDownListFor(model => model.PickupLocationNickname, new SelectList(ViewBag.pickupLocations), "Please select another pickup location", new {@class = "form-control" })
        }
    </div>

<br />
<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <div class="col-md-4"><h4>recipient address nickname</h4></div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.RecipientNickname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipientNickname, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>

<p> [Please enter a nickname for the recipient address if you want to save it for later use]</p>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <div class="col-md-4"> <h4>pickup address nickname</h4></div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.PickupNickname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PickupNickname, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>
<p> [Please enter a nickname for the pickup address if you want to save it for later use]</p>
<br />
<div class="form-group">
    <button type="submit" value="Create" class="btn btn-primary">Save</button>
</div>
}
