@model SinExWebApp20256461.Models.Tracking

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>

@{
    ViewBag.Title = "Input Tracking";
}

<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h2>Input Tracking</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (ViewBag.page == 1)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.WaybillNumber, "WaybillNumber", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.WaybillNumber, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" name="submit" value="select waybill" class="btn btn-default" />
                        </div>
                    </div>
                }
                else if (ViewBag.page == 2)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.WaybillNumber, "WaybillNumber", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.WaybillNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Type, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Type, new SelectList(ViewBag.Types), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="select type" name="submit" class="btn btn-default" />
                        </div>
                    </div>
                }
                else if (ViewBag.page == 3 || ViewBag.page == 4)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.WaybillNumber, "WaybillNumber", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.WaybillNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Type, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <!--Problem here, can't input correct time-->
                            @Html.TextBoxFor(model => model.DateTime, htmlAttributes: new { @value = DateTime.Now, @type = "datetime-local", @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    if (ViewBag.page == 3)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.DeliveredAt, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DeliveredAt, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DeliveredAt, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DeliveredTo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DeliveredTo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DeliveredTo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="save" name ="submit" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        }
    @ViewBag.msg

    @*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
</body>
</html>
